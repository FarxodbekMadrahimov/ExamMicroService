// <auto-generated />
using System;
using Ambulance.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ambulance.Infrastructure.Migrations
{
    [DbContext(typeof(AmbulanceDbContext))]
    [Migration("20231207193204_plsss")]
    partial class plsss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ambulance.Domain.Entitites.AmbulancesInfo.AmbulanceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("amulanceInfo");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.Doctors.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmergencyCallId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyCallId");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.EmergencyCalls.EmergencyCalling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AmbulanceDispatched")
                        .HasColumnType("bit");

                    b.Property<int?>("AmbulanceId")
                        .HasColumnType("int");

                    b.Property<string>("CallerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeOfCall")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AmbulanceId");

                    b.ToTable("emergencyCalls");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.Patients.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("EmergencyCallId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyCallId");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.Doctors.Doctor", b =>
                {
                    b.HasOne("Ambulance.Domain.Entitites.EmergencyCalls.EmergencyCalling", "EmergencyCall")
                        .WithMany()
                        .HasForeignKey("EmergencyCallId");

                    b.Navigation("EmergencyCall");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.EmergencyCalls.EmergencyCalling", b =>
                {
                    b.HasOne("Ambulance.Domain.Entitites.AmbulancesInfo.AmbulanceInfo", "Ambulance")
                        .WithMany("EmergencyCalls")
                        .HasForeignKey("AmbulanceId");

                    b.Navigation("Ambulance");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.Patients.Patient", b =>
                {
                    b.HasOne("Ambulance.Domain.Entitites.EmergencyCalls.EmergencyCalling", "EmergencyCall")
                        .WithMany()
                        .HasForeignKey("EmergencyCallId");

                    b.Navigation("EmergencyCall");
                });

            modelBuilder.Entity("Ambulance.Domain.Entitites.AmbulancesInfo.AmbulanceInfo", b =>
                {
                    b.Navigation("EmergencyCalls");
                });
#pragma warning restore 612, 618
        }
    }
}
